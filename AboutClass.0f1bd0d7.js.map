{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,W,iB,C,E,E,Q,C,E,Q,S,C,C,C,E,O,c,C,E,O,C,a,C,M,C,E,a,C,C,G,E,E,O,C,U,I,G,I,E,E,S,E,E,S,E,E,S,E,E,QCIA,OAAM,UAAmB,EAAA,SAAQ,CAE7B,YAAY,CAAK,CAAC,CACd,KAAK,CAAC,EAEV,CAEA,mBAAmB,CAEnB,CAEA,QAAQ,CAEJ,MACI,AADJ,WAAA,EACI,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MADL,CACS,UAAU,Q,S,CACX,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAAD,CAAI,SAAA,+B,GAGJ,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,C,S,CAAK,gBAGD,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,AAAA,EAAA,OAAU,CAAE,QAAQ,CAArB,CACK,SAAA,CAAC,CAAA,aAAC,CAAY,CAAC,GAAI,AAAJ,WAAA,EAAI,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAApB,CAAuB,UAAU,gBAAiB,SAAA,C,E,G,A,GAG3D,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAQ,CAAT,CAAW,KAAM,QAAS,SAAU,kB,G,A,EAqBhD,CACJ,CACA,IAAA,EAAe,C,G,E,Q,S,C,C,C,E,E,E,O,C,U,I,G,I,E,E,S,E,E,QC9Cf,OAAM,UAAkB,AAAA,WAAA,EAAA,EAAA,GAAM,SAAS,CAEnC,YAAY,CAAK,CAAC,CACd,KAAK,CAAC,GAEN,IAAI,CAAC,KAAK,CAAC,CAGP,SAAS,CACL,KAAK,QACL,SAAS,QACT,WAAW,EACf,CACJ,CAEJ,CAEC,MAAM,mBAAmB,CAMtB,IAAI,CAAC,aAAa,CAAI,YAAY,KAElC,EAAE,KAKF,IAAM,EAAO,MAAM,MAAM,uDACnB,EAAO,MAAM,EAAK,IAAI,GAG5B,IAAI,CAAC,QAAQ,CAAC,CACV,SAAS,CACb,EACJ,CAEA,oBAAoB,CAEpB,CAEA,sBAAsB,CAClB,cAAc,IAAI,CAAC,aAAa,CAEpC,CAGC,QAAQ,CAKL,GAAK,CAAA,KAAC,CAAI,CAAA,SAAE,CAAQ,CAAA,WAAC,CAAU,CAAC,CAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAGvD,MACK,AADL,WAAA,EACK,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MADN,CACU,UAAU,W,S,CAoBX,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MAAD,CAAK,IAAK,C,GACV,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,KAAD,C,S,CAAI,SAAO,E,A,GACX,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,KAAD,C,S,CAAI,aAAW,E,A,GACf,AAAA,WAAA,EAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,KAAD,CAAI,SAAA,kC,G,A,EAGhB,CACJ,CACA,IAAA,EAAe,C","sources":["<anon>","src/components/AboutClass.js","src/components/UserClass.js"],"sourcesContent":["\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire0da5\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"hA5PF\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $ccca52a692cf7107$export$2e2bcd8739ae039);\n\nvar $l6Z0V = parcelRequire(\"l6Z0V\");\n\nvar $5CfqS = parcelRequire(\"5CfqS\");\n\nvar $3wFyb = parcelRequire(\"3wFyb\");\n\nvar $9jwih = parcelRequire(\"9jwih\");\nclass $ccca52a692cf7107$var$AboutClass extends (0, $5CfqS.Component) {\n    constructor(props){\n        super(props);\n    //console.log(\"Parent-constructor\")\n    }\n    componentDidMount() {\n    //console.log(\"parent-compoDidMount\")\n    }\n    render() {\n        //console.log(\"Parent-Render\")\n        return /*#__PURE__*/ (0, $l6Z0V.jsxs)(\"div\", {\n            className: \"userM\",\n            children: [\n                /*#__PURE__*/ (0, $l6Z0V.jsx)(\"h1\", {\n                    children: \"Inside AboutClass class compo\"\n                }),\n                /*#__PURE__*/ (0, $l6Z0V.jsxs)(\"div\", {\n                    children: [\n                        \"LoggedInUser:\",\n                        /*#__PURE__*/ (0, $l6Z0V.jsx)((0, $9jwih.default).Consumer, {\n                            children: ({ loggedInUser: loggedInUser })=>/*#__PURE__*/ (0, $l6Z0V.jsx)(\"h1\", {\n                                    className: \"font-semibold\",\n                                    children: loggedInUser\n                                })\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0, $l6Z0V.jsx)((0, $3wFyb.default), {\n                    name: \"First\",\n                    location: \"Pune Maharashtra\"\n                })\n            ]\n        });\n    }\n}\nvar $ccca52a692cf7107$export$2e2bcd8739ae039 = $ccca52a692cf7107$var$AboutClass;\n\n});\nparcelRegister(\"3wFyb\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $291497487962670a$export$2e2bcd8739ae039);\n\nvar $l6Z0V = parcelRequire(\"l6Z0V\");\n\nvar $5CfqS = parcelRequire(\"5CfqS\");\n// Extend React.compo[class given by React] let react know that its class based compo\n// It is class which has render method that return piece of JSX called class based compo\n// In React we have React.compo class using it from imported React\nclass $291497487962670a$var$UserClass extends (0, (/*@__PURE__*/$parcel$interopDefault($5CfqS))).Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            // count:0,\n            // count2:2\n            userInfo: {\n                name: \"dummy\",\n                loaction: \"nagar\",\n                avatar_url: \"\"\n            }\n        };\n    //console.log(\"constructor\")\n    }\n    async componentDidMount() {\n        //console.log(\"CompoDidMount\")\n        // it keeps executing even after compo unmount coz interval is browsers API nd React don't know when to terminate it we manually need to do it\n        // CompoWillMount:- call right before compo removed from DOM which is perfect place for completing all cleanup tasks there we clearInterval\n        this.timerInterval = setInterval(()=>{\n        //  console.log(\"setInterval in CompoDidMount\")\n        }, 1000);\n        // used to call api --> first UI render then api call is preferred way coz immediately with\n        // available data user can see wenpage nd once data fetched from api UI re-render compo nd update data wherever requ.\n        const data = await fetch(\"https://api.github.com/users/Prafulla-Santosh-Dethe\");\n        const json = await data.json();\n        //console.log(\"data: \",json)\n        this.setState({\n            userInfo: json\n        });\n    }\n    componentDidUpdate() {\n    //console.log(\"compoDidUpdate\")\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerInterval);\n    //console.log(\"compoWillUnmount\")\n    }\n    render() {\n        // const{name, location} = this.props\n        // const{count,count2} = this.state\n        //console.log(\"render\")\n        const { name: name, location: location, avatar_url: avatar_url } = this.state.userInfo;\n        // render method return JSX which display on UI\n        // debugger;\n        return /*#__PURE__*/ (0, $l6Z0V.jsxs)(\"div\", {\n            className: \"userCard\",\n            children: [\n                /*#__PURE__*/ (0, $l6Z0V.jsx)(\"img\", {\n                    src: avatar_url\n                }),\n                /*#__PURE__*/ (0, $l6Z0V.jsxs)(\"h2\", {\n                    children: [\n                        \"Name: \",\n                        name\n                    ]\n                }),\n                /*#__PURE__*/ (0, $l6Z0V.jsxs)(\"h3\", {\n                    children: [\n                        \"Location: \",\n                        location\n                    ]\n                }),\n                /*#__PURE__*/ (0, $l6Z0V.jsx)(\"h3\", {\n                    children: \"Contact: @prafulla-santosh-dethe\"\n                })\n            ]\n        });\n    }\n}\nvar $291497487962670a$export$2e2bcd8739ae039 = $291497487962670a$var$UserClass;\n\n});\n\n\n\n//# sourceMappingURL=AboutClass.0f1bd0d7.js.map\n","import {Component} from \"react\";\r\nimport UserClass from \"./UserClass\";\r\nimport UserContext from \"../utils/UserContext\";\r\n\r\nclass AboutClass extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        //console.log(\"Parent-constructor\")\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log(\"parent-compoDidMount\")\r\n    }\r\n\r\n    render(){\r\n        //console.log(\"Parent-Render\")\r\n        return(\r\n            <div className=\"userM\">\r\n                <h1>Inside AboutClass class compo</h1>\r\n\r\n                {/* how to get context value in classBased Components */}\r\n                <div>\r\n                    LoggedInUser:\r\n                    {/* consumer consumes or access value fron contextCreated it take fun which have that value nd then we can use it */}\r\n                    <UserContext.Consumer>\r\n                        {({loggedInUser})=> <h1 className=\"font-semibold\">{loggedInUser}</h1>}\r\n                    </UserContext.Consumer>\r\n                </div>\r\n                <UserClass name={\"First\"} location={\"Pune Maharashtra\"}/>\r\n\r\n                {/* multiple class child in parent */}\r\n                {/* If we have multiple child the sequence will be \r\n                       parent-constructor, parent-render\r\n                       child1-const, child1-render\r\n                       child2-const, child2-Rener\r\n                       child1-compoDidMount\r\n                       child2-compoDidMount\r\n                       parent-compoDidMount\r\n              */}\r\n              {/* all compoDidMount batch together then execute with child sequence\r\n              Coz==> Mounting diving in 2 phases \r\n              1-Render phase == consiist of Constructor nd Render,\r\n               2-CommitPhase== consisit updating DOM/DOM Manipulation nd CompoDidMount \r\n               nd its expnsive to update DOM so React batch all of them together then execute */}\r\n                {/* <UserClass name={\"Second\"} location={\"Jamkhed Maharashtra\"}/> */}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AboutClass;","import React from \"react\";\r\n// Extend React.compo[class given by React] let react know that its class based compo\r\n// It is class which has render method that return piece of JSX called class based compo\r\n// In React we have React.compo class using it from imported React\r\n\r\n\r\nclass UserClass extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state={\r\n            // count:0,\r\n            // count2:2\r\n            userInfo:{\r\n                name:\"dummy\",\r\n                loaction:\"nagar\",\r\n                avatar_url:\"\",\r\n            }\r\n        }\r\n        //console.log(\"constructor\")\r\n    }\r\n\r\n     async componentDidMount(){\r\n        //console.log(\"CompoDidMount\")\r\n\r\n        // it keeps executing even after compo unmount coz interval is browsers API nd React don't know when to terminate it we manually need to do it\r\n        // CompoWillMount:- call right before compo removed from DOM which is perfect place for completing all cleanup tasks there we clearInterval\r\n\r\n        this.timerInterval =  setInterval(()=>{\r\n          //  console.log(\"setInterval in CompoDidMount\")\r\n        },1000)\r\n\r\n        // used to call api --> first UI render then api call is preferred way coz immediately with\r\n        // available data user can see wenpage nd once data fetched from api UI re-render compo nd update data wherever requ.\r\n        \r\n        const data = await fetch(\"https://api.github.com/users/Prafulla-Santosh-Dethe\");\r\n        const json = await data.json();\r\n        //console.log(\"data: \",json)\r\n\r\n        this.setState({\r\n            userInfo:json,\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //console.log(\"compoDidUpdate\")\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerInterval)\r\n        //console.log(\"compoWillUnmount\")\r\n    }\r\n\r\n    \r\n     render(){\r\n        // const{name, location} = this.props\r\n        // const{count,count2} = this.state\r\n         //console.log(\"render\")\r\n\r\n        const{name, location,avatar_url} = this.state.userInfo\r\n        // render method return JSX which display on UI\r\n        // debugger;\r\n       return(\r\n            <div className=\"userCard\">\r\n                {/* <h2>Name: {this.props.name}</h2>\r\n                <h3>Location: {this.props.location}</h3> */}\r\n{/* \r\n                 <h1>Count={count}</h1> \r\n                 <h1>Count2={this.state.count2}</h1> */}\r\n\r\n                {/* onClick btn update  */}\r\n                {/* <button onClick={()=>{\r\n                    // this.state.count=this.state.count+1 -->wrong way\r\n\r\n                    this.setState({\r\n                        count:this.state.count+1,\r\n                        count2:this.state.count2+2  \r\n                    });\r\n                }}>Count Increase</button>\r\n                <h1>Count: {count}</h1>\r\n                <h1>Count: {count2}</h1> */}\r\n\r\n                {/* after destructure */}\r\n                <img src={avatar_url}/>\r\n                <h2>Name: {name}</h2>\r\n                <h3>Location: {location}</h3>\r\n                <h3>Contact: @prafulla-santosh-dethe</h3>\r\n            </div> \r\n       )\r\n    }\r\n}\r\nexport default UserClass;"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$ccca52a692cf7107$export$2e2bcd8739ae039","$l6Z0V","$5CfqS","$3wFyb","$9jwih","$ccca52a692cf7107$var$AboutClass","Component","constructor","props","componentDidMount","render","jsxs","className","children","jsx","Consumer","loggedInUser","name","location","$291497487962670a$export$2e2bcd8739ae039","$291497487962670a$var$UserClass","state","userInfo","loaction","avatar_url","timerInterval","setInterval","data","fetch","json","setState","componentDidUpdate","componentWillUnmount","clearInterval","src"],"version":3,"file":"AboutClass.0f1bd0d7.js.map"}